//
// Created by c1533 on 2022/9/30.
//
/**插入排序：
 * 每次将一个待排序的记录按其关键字大小插入到前面已排好序的子序列中，知到全部记录插入完成
 *
 * */
//直接插入排序
void Insert(int A[], int n) {
    int i, j, t;
    for (i = 1; i < n; i++) {
        if (A[i] < A[i - 1]) {      //A关键字小于前驱
            t = A[i];           //变量t暂时存储A[i]
            for (j = i - 1; j > 0 && A[j] > t; j--) {       //检查所有前面已经排好的元素
                A[j + 1] = A[j];        //所有大于t的向后移
            }
            A[j + 1] = t;       //插入到该位置
        }
    }
}
void insertSort(int A[], int n){
    for(int i=2;i<=n;i++){
        int j=i-1;
        if (A[i] < A[i - 1]) {
            A[0] = A[i];
            for(;A[0]<A[j];j--)
                A[j+1]=A[j];
            A[j+1]=A[0];
        }
    }
}
/**复杂度分析：
 * 空间复杂度O(n)
 * 时间复杂度：最好：O(n)，最坏：O(n^2)，平均：O(n^2)
 * 稳定性：稳定
 * */

/**优化：折半查找*/
